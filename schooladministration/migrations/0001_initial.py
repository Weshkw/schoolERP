# Generated by Django 4.2.16 on 2024-11-28 20:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('identity', '0001_initial'),
        ('studentmanagement', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='This is the rank anyone holds in school, e.g., principal, deputy principal, headteacher, etc.', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeachingStaff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('professional_identity', models.CharField(blank=True, help_text='Professional identifier assigned by an organization, e.g., TSC number for teachers.', max_length=255, null=True)),
                ('national_id_number', models.CharField(error_messages={'unique': 'This National ID number is already registered in the system.'}, max_length=50, unique=True)),
                ('date_of_joining', models.DateField(help_text='Date the administrator joined the school.')),
                ('curriculum_vitae', models.FileField(blank=True, null=True, upload_to='curriculum_vitae/')),
                ('awards', models.ManyToManyField(blank=True, help_text='The awards received by the teacher.', to='studentmanagement.award')),
                ('clubs', models.ManyToManyField(blank=True, help_text='The clubs mentored by the teacher.', to='studentmanagement.clubsorganization')),
                ('ranks', models.ManyToManyField(help_text="Staff's ranks within the school", to='schooladministration.rank')),
                ('school', models.ForeignKey(help_text='School a staff works for.', on_delete=django.db.models.deletion.CASCADE, related_name='teaching_staff_profile', to='identity.school')),
                ('sports', models.ManyToManyField(blank=True, help_text='The sports coached or guided by the teacher.', to='studentmanagement.sport')),
                ('staff_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subjects', models.ManyToManyField(help_text='The subjects the teacher specializes in.', to='studentmanagement.subject')),
                ('teaching_grades', models.ManyToManyField(help_text='The grade levels taught by the teacher.', to='studentmanagement.grade')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
        migrations.CreateModel(
            name='NonTeachingStaff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('professional_identity', models.CharField(blank=True, help_text='Professional identifier assigned by an organization, e.g., TSC number for teachers.', max_length=255, null=True)),
                ('national_id_number', models.CharField(error_messages={'unique': 'This National ID number is already registered in the system.'}, max_length=50, unique=True)),
                ('date_of_joining', models.DateField(help_text='Date the administrator joined the school.')),
                ('curriculum_vitae', models.FileField(blank=True, null=True, upload_to='curriculum_vitae/')),
                ('awards', models.ManyToManyField(blank=True, help_text='The awards received by the non-teaching staff member.', to='studentmanagement.award')),
                ('clubs', models.ManyToManyField(blank=True, help_text='The clubs the non-teaching staff member is part of.', to='studentmanagement.clubsorganization')),
                ('ranks', models.ManyToManyField(help_text="Staff's ranks within the school", to='schooladministration.rank')),
                ('school', models.ForeignKey(help_text='School a staff works for.', on_delete=django.db.models.deletion.CASCADE, related_name='non_teaching_staff_profile', to='identity.school')),
                ('sports', models.ManyToManyField(blank=True, help_text='The sports the non-teaching staff member is involved in.', to='studentmanagement.sport')),
                ('staff_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Non-Teaching Staff',
                'verbose_name_plural': 'Non-Teaching StaffS',
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('professional_identity', models.CharField(blank=True, help_text='Professional identifier assigned by an organization, e.g., TSC number for teachers.', max_length=255, null=True)),
                ('national_id_number', models.CharField(error_messages={'unique': 'This National ID number is already registered in the system.'}, max_length=50, unique=True)),
                ('date_of_joining', models.DateField(help_text='Date the administrator joined the school.')),
                ('curriculum_vitae', models.FileField(blank=True, null=True, upload_to='curriculum_vitae/')),
                ('ranks', models.ManyToManyField(help_text="Staff's ranks within the school", to='schooladministration.rank')),
                ('school', models.ManyToManyField(help_text='School a staff works for.', related_name='administrator_profile', to='identity.school')),
                ('staff_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Administrator',
                'verbose_name_plural': 'Administrators',
            },
        ),
    ]
