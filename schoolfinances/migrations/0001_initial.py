# Generated by Django 4.2.16 on 2024-11-28 20:40

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('identity', '0001_initial'),
        ('studentmanagement', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FeeAllocationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(help_text='The name of the fee category (e.g., Academic Fees, Sports Fees).', max_length=100)),
                ('base_amount', models.DecimalField(decimal_places=2, help_text='The base amount to be paid for this fee category (cannot be negative).', max_digits=10)),
                ('grades', models.ManyToManyField(help_text='Grade levels for which this fee category applies.', to='studentmanagement.grade')),
                ('school', models.ForeignKey(help_text='The school to which this fee category belongs.', on_delete=django.db.models.deletion.PROTECT, to='identity.school')),
            ],
        ),
        migrations.CreateModel(
            name='TermOrSemester',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the term or semester (e.g., Term 1, Semester 2).', max_length=50)),
                ('start_date', models.DateField(help_text='The start date of the term or semester.')),
                ('end_date', models.DateField(help_text='The end date of the term or semester.')),
                ('academic_year', models.CharField(help_text='The academic year in the format YYYY-YYYY (e.g., 2024-2025).', max_length=9)),
                ('school', models.ForeignKey(help_text='The school to which this term or semester belongs.', on_delete=django.db.models.deletion.PROTECT, to='identity.school')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payer', models.CharField(help_text='Entity that made the payment.', max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, help_text='The total amount of the payment.', max_digits=10)),
                ('payment_date', models.DateField(auto_now_add=True, help_text='The date when the payment was received.')),
                ('payment_method', models.CharField(choices=[('Cash', 'Cash'), ('M-Pesa Payment', 'M-Pesa Payment'), ('Bank Deposit', 'Bank Deposit'), ('Bank Transfer', 'Bank Transfer')], help_text='The method of payment.', max_length=40)),
                ('receipt_number', models.UUIDField(default=uuid.uuid4, help_text='A unique receipt identifier.', unique=True)),
                ('recorded_by', models.CharField(help_text='The staff member who recorded the payment.', max_length=50)),
                ('category', models.ForeignKey(help_text='The category of the fee allocation.', on_delete=django.db.models.deletion.PROTECT, to='schoolfinances.feeallocationcategory')),
                ('school', models.ForeignKey(help_text='The school to which this payment is made to.', on_delete=django.db.models.deletion.PROTECT, to='identity.school')),
                ('student', models.ForeignKey(help_text='The student whose payment is made for.', on_delete=django.db.models.deletion.PROTECT, to='studentmanagement.student')),
                ('term_or_semester', models.ForeignKey(help_text='The academic term or semester associated with this payment.', on_delete=django.db.models.deletion.PROTECT, to='schoolfinances.termorsemester')),
            ],
        ),
        migrations.CreateModel(
            name='FeesStructure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(help_text='A description of the fees structure (e.g., Annual fee breakdown).')),
                ('file', models.FileField(help_text='Upload a PDF file of the fees structure.', upload_to='fees_structure/')),
                ('school', models.ForeignKey(help_text='The school associated with this fees structure.', on_delete=django.db.models.deletion.PROTECT, to='identity.school')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='feeallocationcategory',
            name='term_or_semester',
            field=models.ForeignKey(help_text='The term or semester associated with this fee category.', on_delete=django.db.models.deletion.PROTECT, to='schoolfinances.termorsemester'),
        ),
    ]
